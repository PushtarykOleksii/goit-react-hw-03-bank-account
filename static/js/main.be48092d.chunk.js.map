{"version":3,"sources":["components/Controls/Controls.module.css","components/Balance/Balance.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","App.js","index.js","components/TransactionHistory/TransactionHistory.module.css"],"names":["module","exports","Controls","amount","onClick","onChange","className","style","controls","imput","placeholder","type","name","value","button","Balance","balanceWithdraw","balanceDeposit","balance","balanceI","role","aria-label","TransactionHistory","transaction","history","map","item","key","id","line","data","Dashboard","state","handleChange","target","setState","handleClick","addTransaction","resetInput","notifyWarn","toast","warn","notifyError","error","stateObject","typeName","Number","transitionAdd","shortid","generate","Date","toLocaleString","prevState","getIte","localStorage","getItem","JSON","parse","this","prevProp","transiction","setItem","stringify","length","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be48092d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__BY2-d\",\"imput\":\"Controls_imput__25r6q\",\"button\":\"Controls_button__31jsY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__30Dlf\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Controls.module.css';\n\nconst Controls = ({ amount, onClick, onChange }) => (\n  <>\n    <section className={style.controls}>\n      <input\n        className={style.imput}\n        placeholder=\"Amount of money you want to...\"\n        type=\"number\"\n        name=\"amount\"\n        onClick={onClick}\n        onChange={onChange}\n        value={amount}\n      />\n      <button\n        className={style.button}\n        type=\"button\"\n        name=\"deposit\"\n        onClick={onClick}\n      >\n        DEPOSIT\n      </button>\n      <button\n        className={style.button}\n        type=\"button\"\n        name=\"withdraw\"\n        onClick={onClick}\n      >\n        WITHDRAW\n      </button>\n    </section>\n  </>\n);\n\nexport default Controls;\n\nControls.propTypes = {\n  amount: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Balance.module.css';\n\nconst Balance = ({ balanceWithdraw, balanceDeposit, balance }) => (\n  <>\n    <section className={style.balance}>\n      <span className={style.balanceI} role=\"img\" aria-label=\"deposit\">\n        ⬆️ {balanceDeposit}$\n      </span>\n      <span className={style.balanceI} role=\"img\" aria-label=\"withdraw\">\n        ⬇️ {balanceWithdraw}$\n      </span>\n      <span className={style.balanceI}>Balance: {balance} $</span>\n    </section>\n  </>\n);\n\nexport default Balance;\n\nBalance.propTypes = {\n  balanceWithdraw: PropTypes.number.isRequired,\n  balanceDeposit: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transaction }) => {\n  return (\n    <>\n      <table className={style.history}>\n        <thead>\n          <tr>\n            <th>TRANSACTION</th>\n            <th>AMOUNT</th>\n            <th>DATA</th>\n          </tr>\n        </thead>\n        <tbody>\n          {transaction.map(item => (\n            <tr key={item.id}>\n              <td className={style.line}>{item.type}</td>\n              <td className={style.line}>{item.amount}$</td>\n              <td className={style.line}>{item.data}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default TransactionHistory;\n\nTransactionHistory.propTypes = {\n  transaction: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.node,\n      date: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nexport default class Dashboard extends Component {\n  state = {\n    transaction: [],\n    balance: 0,\n    amount: '',\n    balanceDeposit: 0,\n    balanceWithdraw: 0,\n  };\n\n  componentDidMount() {\n    const getIte = localStorage.getItem('bank');\n    if (getIte !== null) {\n      const item = JSON.parse(getIte);\n      this.setState({ ...item });\n    }\n  }\n\n  componentDidUpdate(prevProp, prevState) {\n    const { transiction } = this.state;\n    if (prevState.transiction !== transiction) {\n      localStorage.setItem('bank', JSON.stringify(this.state));\n    }\n  }\n\n  // input;\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  // click on Button\n  handleClick = ({ target }) => {\n    const { name } = target;\n    this.addTransaction({ ...this.state }, name);\n  };\n\n  resetInput = () => {\n    this.setState({\n      amount: '',\n    });\n  };\n\n  notifyWarn = () => toast.warn('Enter corect amount...');\n\n  notifyError = () =>\n    toast.error('Not enough money! Please enter correct number');\n\n  addTransaction = (stateObject, typeName) => {\n    if (Number(stateObject.amount) === 0) {\n      this.notifyWarn();\n      this.resetInput();\n      return;\n    }\n\n    const transitionAdd = {\n      id: shortid.generate(),\n      type: typeName,\n      amount: stateObject.amount,\n      data: new Date().toLocaleString(),\n    };\n    if (typeName === 'deposit') {\n      this.setState(prevState => ({\n        transaction: [...prevState.transaction, transitionAdd],\n        balance: stateObject.balance + Number(stateObject.amount),\n        balanceDeposit: stateObject.balanceDeposit + Number(stateObject.amount),\n        amount: '',\n      }));\n    } else if (typeName === 'withdraw') {\n      if (stateObject.amount <= stateObject.balance) {\n        this.setState(prevState => ({\n          transaction: [...prevState.transaction, transitionAdd],\n          balance: stateObject.balance - Number(stateObject.amount),\n          balanceWithdraw:\n            stateObject.balanceWithdraw + Number(stateObject.amount),\n          amount: '',\n        }));\n      } else {\n        this.resetInput();\n        this.notifyError();\n      }\n    }\n  };\n\n  render() {\n    const {\n      transaction,\n      balance,\n      amount,\n      balanceDeposit,\n      balanceWithdraw,\n    } = this.state;\n\n    return (\n      <>\n        <Controls\n          onChange={this.handleChange}\n          onClick={this.handleClick}\n          amount={amount}\n        />\n        <ToastContainer />\n        <Balance\n          balanceDeposit={balanceDeposit}\n          balanceWithdraw={balanceWithdraw}\n          balance={balance}\n        />\n        {transaction.length > 0 && (\n          <TransactionHistory transaction={transaction} />\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport './App.css';\nimport Dashboard from './components/Dashboard/Dashboard';\n\nconst App = () => (\n  <>\n    <Dashboard />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__3SkB0\",\"line\":\"TransactionHistory_line__2XLyJ\"};"],"sourceRoot":""}