{"version":3,"sources":["components/Balance/Balance.module.css","components/Controls/Controls.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","App.js","index.js","components/TransactionHistory/TransactionHistory.module.css"],"names":["module","exports","Controls","amount","onClick","onChange","className","style","controls","placeholder","input","type","name","value","button","Balance","balanceStay","balanceAdd","balance","role","aria-label","TransactionHistory","transaction","history","line","map","item","key","id","data","Dashboard","state","handleChange","target","setState","handleClick","addTransaction","resetInput","notifyWarn","toast","warn","notifyError","error","stateObject","typeName","Number","transitionAdd","shortid","generate","Date","toLocaleString","prevState","balanceDeposit","balanceWithdraw","getItem","localStorage","JSON","parse","this","setItem","stringify","length","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5097a1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__30Dlf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__BY2-d\",\"input\":\"Controls_input__1zU3F\",\"button\":\"Controls_button__31jsY\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Controls.module.css';\n\nconst Controls = ({ amount, onClick, onChange }) => (\n  <>\n    <section className={style.controls}>\n      <input\n        placeholder=\"Place amount of money to...\"\n        className={style.input}\n        type=\"number\"\n        name=\"amount\"\n        onClick={onClick}\n        onChange={onChange}\n        value={amount}\n      />\n      <button\n        className={style.button}\n        type=\"button\"\n        name=\"deposit\"\n        onClick={onClick}\n      >\n        DEPOSIT\n      </button>\n      <button\n        className={style.button}\n        type=\"button\"\n        name=\"withdraw\"\n        onClick={onClick}\n      >\n        WITHDRAW\n      </button>\n    </section>\n  </>\n);\n\nexport default Controls;\n\nControls.propTypes = {\n  amount: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Balance.module.css';\n\nconst Balance = ({ balanceStay, balanceAdd, balance }) => (\n  <>\n    <section className={style.balance}>\n      <span role=\"img\" aria-label=\"de\">\n        ⬆️{balanceAdd}$\n      </span>\n      <span role=\"img\" aria-label=\"de\">\n        ⬇️{balanceStay}$\n      </span>\n      <span>Balance: {balance}$</span>\n    </section>\n  </>\n);\n\nexport default Balance;\n\nBalance.propTypes = {\n  balanceStay: PropTypes.number.isRequired,\n  balanceAdd: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transaction }) => {\n  return (\n    <>\n      <table className={style.history}>\n        <thead>\n          <tr>\n            <th>Transaction</th>\n            <th>Amount</th>\n            <th>Date</th>\n          </tr>\n        </thead>\n        <tbody className={style.line}>\n          {transaction.map(item => (\n            <tr className={style.line} key={item.id}>\n              <td>{item.type}</td>\n              <td>{item.amount}$</td>\n              <td>{item.data}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default TransactionHistory;\n\nTransactionHistory.propTypes = {\n  transaction: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.node,\n      date: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n};\n","/* eslint-disable react/state-in-constructor */\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nexport default class Dashboard extends Component {\n  state = {\n    transaction: [],\n    amount: '',\n    balance: 0,\n    balanceAdd: 0,\n    balanceStay: 0,\n  };\n\n  // check localStorage\n  componentDidMount() {\n    const getItem = localStorage.getItem('bank');\n    if (getItem !== null) {\n      const item = JSON.parse(getItem);\n      this.setState({ ...item });\n    }\n  }\n\n  // localStorage.setItem\n  componentDidUpdate(prevState) {\n    const { transaction } = this.state;\n    if (prevState.transaction !== transaction) {\n      localStorage.setItem('bank', JSON.stringify(this.state));\n    }\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  // click on Button\n  handleClick = ({ target }) => {\n    const { name } = target;\n    this.addTransaction({ ...this.state }, name);\n  };\n\n  resetInput = () => {\n    this.setState({\n      amount: '',\n    });\n  };\n\n  notifyWarn = () => toast.warn('Enter corect amount...');\n\n  notifyError = () =>\n    toast.error('Not enough money! Please enter correct number');\n\n  addTransaction = (stateObject, typeName) => {\n    if (Number(stateObject.amount) <= 0) {\n      this.notifyWarn();\n      this.resetInput();\n      return;\n    }\n\n    const transitionAdd = {\n      id: shortid.generate(),\n      type: typeName,\n      amount: stateObject.amount,\n      data: new Date().toLocaleString(),\n    };\n    if (typeName === 'deposit') {\n      this.setState(prevState => ({\n        transaction: [...prevState.transaction, transitionAdd],\n        balance: stateObject.balance + Number(stateObject.amount),\n        balanceDeposit: stateObject.balanceDeposit + Number(stateObject.amount),\n        amount: '',\n      }));\n    } else if (typeName === 'withdraw') {\n      if (stateObject.amount <= stateObject.balance) {\n        this.setState(prevState => ({\n          transaction: [...prevState.transaction, transitionAdd],\n          balance: stateObject.balance - Number(stateObject.amount),\n          balanceWithdraw:\n            stateObject.balanceWithdraw + Number(stateObject.amount),\n          amount: '',\n        }));\n      } else {\n        this.resetInput();\n        this.notifyError();\n      }\n    }\n  };\n\n  render() {\n    const {\n      transaction,\n      balance,\n      amount,\n      balanceDeposit,\n      balanceWithdraw,\n    } = this.state;\n\n    return (\n      <>\n        <Controls\n          onChange={this.handleChange}\n          onClick={this.handleClick}\n          amount={amount}\n        />\n        <ToastContainer />\n        <Balance\n          balanceDeposit={balanceDeposit}\n          balanceWithdraw={balanceWithdraw}\n          balance={balance}\n        />\n        {transaction.length > 0 && (\n          <TransactionHistory transaction={transaction} />\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport './App.css';\nimport Dashboard from './components/Dashboard/Dashboard';\n\nconst App = () => (\n  <>\n    <Dashboard />\n  </>\n)\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__3SkB0\",\"line\":\"TransactionHistory_line__2XLyJ\"};"],"sourceRoot":""}